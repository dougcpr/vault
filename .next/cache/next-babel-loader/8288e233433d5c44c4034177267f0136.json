{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/docooper/webdev/vault/src/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport CenterLayout from '../layouts/CenterLayout';\nimport ButtonGrid from '../layouts/DualButtonGrid';\nimport Card from '../components/Card';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Router from 'next/router';\nexport default (function () {\n  var _useState = useState(''),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  function login() {\n    return _login.apply(this, arguments);\n  }\n\n  function _login() {\n    _login = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var body, response, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              body = {\n                username: username,\n                password: password\n              };\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch('http://localhost:3000/api/post/login', {\n                method: 'POST',\n                body: _JSON$stringify(body),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              json = _context.sent;\n              console.log('Success:', _JSON$stringify(json));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n    return _login.apply(this, arguments);\n  }\n\n  function register() {\n    return _register.apply(this, arguments);\n  }\n\n  function _register() {\n    _register = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Router.push('/register');\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _register.apply(this, arguments);\n  }\n\n  return __jsx(CenterLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Input, {\n    value: username,\n    onChange: function onChange() {\n      return setUsername(event.target.value);\n    },\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(Input, {\n    value: password,\n    onChange: function onChange() {\n      return setPassword(event.target.value);\n    },\n    type: \"password\",\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(ButtonGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: register,\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Register\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: login,\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Login\"))));\n});","map":{"version":3,"sources":["/Users/docooper/webdev/vault/src/pages/login.js"],"names":["React","useState","CenterLayout","ButtonGrid","Card","Input","Button","Router","username","setUsername","password","setPassword","login","body","fetch","method","headers","response","json","console","log","error","register","push","event","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,gBAAe,YAAM;AAAA,kBACYN,QAAQ,CAAC,EAAD,CADpB;AAAA,MACbO,QADa;AAAA,MACHC,WADG;;AAAA,mBAEYR,QAAQ,CAAC,EAAD,CAFpB;AAAA,MAEbS,QAFa;AAAA,MAEHC,WAFG;;AAAA,WAGLC,KAHK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAGpB;AAAA;AAAA;AAAA;AAAA;AAAA;AACOC,cAAAA,IADP,GACc;AAACL,gBAAAA,QAAQ,EAARA,QAAD;AAAWE,gBAAAA,QAAQ,EAARA;AAAX,eADd;AAAA;AAAA;AAAA,qBAGyBI,KAAK,CAC3B,sCAD2B,EAE3B;AACCC,gBAAAA,MAAM,EAAE,MADT;AAECF,gBAAAA,IAAI,EAAE,gBAAeA,IAAf,CAFP;AAGCG,gBAAAA,OAAO,EAAE;AACR,kCAAgB;AADR;AAHV,eAF2B,CAH9B;;AAAA;AAGQC,cAAAA,QAHR;AAAA;AAAA,qBAYqBA,QAAQ,CAACC,IAAT,EAZrB;;AAAA;AAYQA,cAAAA,IAZR;AAaEC,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,gBAAeF,IAAf,CAAxB;AAbF;AAAA;;AAAA;AAAA;AAAA;AAeEC,cAAAA,OAAO,CAACE,KAAR;;AAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHoB;AAAA;AAAA;;AAAA,WAsBLC,QAtBK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAsBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOf,MAAM,CAACgB,IAAP,CAAY,WAAZ,CADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtBoB;AAAA;AAAA;;AA0BpB,SACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEf,QAAd;AAAwB,IAAA,QAAQ,EAAE;AAAA,aAAMC,WAAW,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AAAA,KAAlC;AAAyE,IAAA,KAAK,EAAC,UAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEhB,QAAd;AAAyB,IAAA,QAAQ,EAAE;AAAA,aAAMC,WAAW,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AAAA,KAAnC;AAA0E,IAAA,IAAI,EAAC,UAA/E;AAA0F,IAAA,KAAK,EAAC,UAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,QAAjB;AAA2B,IAAA,KAAK,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEV,KAAjB;AAAwB,IAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHD,CAHD,CADD,CADD;AAaA,CAvCD","sourcesContent":["import React, { useState } from 'react';\nimport CenterLayout from '../layouts/CenterLayout';\nimport ButtonGrid from '../layouts/DualButtonGrid';\nimport Card from '../components/Card';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Router from 'next/router'\n\nexport default () => {\n\tconst [username, setUsername] = useState('');\n\tconst [password, setPassword] = useState('');\n\tasync function login() {\n\t\tconst body = {username, password};\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'http://localhost:3000/api/post/login',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: JSON.stringify(body),\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tconst json = await response.json();\n\t\t\tconsole.log('Success:', JSON.stringify(json));\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t\t// await Router.push('/dashboard')\n\t}\n\tasync function register() {\n\t\tawait Router.push('/register');\n\t}\n\n\treturn (\n\t\t<CenterLayout>\n\t\t\t<Card>\n\t\t\t\t<Input value={username} onChange={() => setUsername(event.target.value)} label=\"Username\"/>\n\t\t\t\t<Input value={password}  onChange={() => setPassword(event.target.value)} type=\"password\" label=\"Password\"/>\n\t\t\t\t<ButtonGrid>\n\t\t\t\t\t<Button onClick={register} block>Register</Button>\n\t\t\t\t\t<div/>\n\t\t\t\t\t<Button onClick={login} block>Login</Button>\n\t\t\t\t</ButtonGrid>\n\t\t\t</Card>\n\t\t</CenterLayout>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}