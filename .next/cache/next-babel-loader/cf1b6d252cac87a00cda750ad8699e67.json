{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/docooper/webdev/vault/src/pages/login.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport CenterLayout from '../layouts/CenterLayout';\nimport ButtonGrid from '../layouts/DualButtonGrid';\nimport Card from '../components/Card';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Router from 'next/router';\nexport default (function () {\n  function login() {\n    return _login.apply(this, arguments);\n  }\n\n  function _login() {\n    _login = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('api/post/login', {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: _JSON$stringify({\n                  username: username,\n                  password: password\n                })\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _login.apply(this, arguments);\n  }\n\n  function register() {\n    return _register.apply(this, arguments);\n  }\n\n  function _register() {\n    _register = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Router.push('/register');\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _register.apply(this, arguments);\n  }\n\n  var _ref = '',\n      _ref2 = _slicedToArray(_ref, 2),\n      username = _ref2[0],\n      password = _ref2[1];\n\n  return __jsx(CenterLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Input, {\n    value: username,\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(Input, {\n    value: password,\n    type: \"password\",\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(ButtonGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: register,\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Register\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: login,\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Login\"))));\n});","map":{"version":3,"sources":["/Users/docooper/webdev/vault/src/pages/login.js"],"names":["React","CenterLayout","ButtonGrid","Card","Input","Button","Router","login","fetch","method","headers","Accept","body","username","password","register","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,gBAAe,YAAM;AAAA,WACLC,KADK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOC,KAAK,CACV,gBADU,EAEV;AACCC,gBAAAA,MAAM,EAAE,MADT;AAECC,gBAAAA,OAAO,EAAE;AACRC,kBAAAA,MAAM,EAAE,kBADA;AAER,kCAAgB;AAFR,iBAFV;AAMCC,gBAAAA,IAAI,EAAC,gBAAe;AAACC,kBAAAA,QAAQ,EAARA,QAAD;AAAWC,kBAAAA,QAAQ,EAARA;AAAX,iBAAf;AANN,eAFU,CADZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADoB;AAAA;AAAA;;AAAA,WAcLC,QAdK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAcpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOT,MAAM,CAACU,IAAP,CAAY,WAAZ,CADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdoB;AAAA;AAAA;;AAAA,aAiBS,EAjBT;AAAA;AAAA,MAiBbH,QAjBa;AAAA,MAiBHC,QAjBG;;AAkBpB,SACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD;AAAO,IAAA,KAAK,EAAED,QAAd;AAAwB,IAAA,KAAK,EAAC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEC,QAAd;AAAwB,IAAA,IAAI,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAC,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,QAAjB;AAA2B,IAAA,KAAK,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,KAAjB;AAAwB,IAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHD,CAHD,CADD,CADD;AAaA,CA/BD","sourcesContent":["import React from 'react'\nimport CenterLayout from '../layouts/CenterLayout';\nimport ButtonGrid from '../layouts/DualButtonGrid';\nimport Card from '../components/Card';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Router from 'next/router'\n\nexport default () => {\n\tasync function login() {\n\t\tawait fetch(\n\t\t\t'api/post/login',\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody:JSON.stringify({username, password})\n\t\t\t});\n\t\t// await Router.push('/dashboard')\n\t}\n\tasync function register() {\n\t\tawait Router.push('/register');\n\t}\n\tconst [username, password] = '';\n\treturn (\n\t\t<CenterLayout>\n\t\t\t<Card>\n\t\t\t\t<Input value={username} label=\"Username\"/>\n\t\t\t\t<Input value={password} type=\"password\" label=\"Password\"/>\n\t\t\t\t<ButtonGrid>\n\t\t\t\t\t<Button onClick={register} block>Register</Button>\n\t\t\t\t\t<div/>\n\t\t\t\t\t<Button onClick={login} block>Login</Button>\n\t\t\t\t</ButtonGrid>\n\t\t\t</Card>\n\t\t</CenterLayout>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}